/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void startGame(GButton source, GEvent event) { //_CODE_:start:740082:
  phase++;
  start.setVisible(false);
  yes.setVisible(true);
  no.setVisible(true);
  restart.setVisible(true);
} //_CODE_:start:740082:


public void yesButton(GButton source, GEvent event) { //_CODE_:start:740082:
  answer = "TRUE";
  answerPath();
}

public void noButton(GButton source, GEvent event) { //_CODE_:start:740082:
  answer = "FALSE";
  answerPath();
}

public void undoButton(GButton source, GEvent event) { //_CODE_:start:740082:
  undo.setVisible(false); //unfortunately, can't undo twice
  Iindex = prevIndex;
  selectQ();
}

public void restartButton(GButton source, GEvent event) { //_CODE_:start:740082:
  phase = 2; //move it back to the game mode
  reGen();
  yes.setVisible(true); //modify all the buttons
  no.setVisible(true);
  undo.setVisible(false);
  savePic.setVisible(false);
}

public void savePicture(GButton source, GEvent event) { //_CODE_:start:740082:
  save(Iindex.get(0).name+".jpeg"); //saves a screenshot of the recycling information to the sketch folder- couldn't find how to save it to, say, desktop or downloads
}

public void itemselect(GDropList source, GEvent event) { //_CODE_:Items:864476: 
  //slider, which simply displays the options and doesn't do anything else
} //_CODE_:Items:864476:

// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("BlueBox");
  start = new GButton(this, 360, 350, 80, 35);
  start.setText("Start");
  start.setTextBold();
  start.addEventHandler(this, "startGame");
  yes = new GButton(this, 200, 300, 80, 35);
  yes.setText("Yes");
  yes.setTextBold();
  yes.addEventHandler(this, "yesButton");
  yes.setVisible(false);
  no = new GButton(this, 500, 300, 80, 35);
  no.setText("No");
  no.setTextBold();
  no.addEventHandler(this, "noButton");
  no.setVisible(false);
  undo = new GButton(this,200,350,80,35);
  undo.setText("Undo Last");
  undo.setTextBold();
  undo.addEventHandler(this, "undoButton");
  undo.setVisible(false);
  restart = new GButton(this,500,350,80,35);
  restart.setText("Restart");
  restart.setTextBold();
  restart.addEventHandler(this, "restartButton");
  restart.setVisible(false);
  itemsDrop = new GDropList(this, 2, 2, 120, 300, 20);
  itemsDrop.setItems(loadStrings("list_864476"), 0);
  itemsDrop.addEventHandler(this, "itemselect");
  savePic = new GButton(this,620,440,80,35);
  savePic.setText("Save Picture");
  savePic.setTextBold();
  savePic.addEventHandler(this, "savePicture");
  savePic.setVisible(false);
}

// Variable declarations 
// autogenerated do not edit
GButton start, yes, no, undo, restart, savePic;
GDropList itemsDrop;
